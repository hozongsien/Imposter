{"version":3,"sources":["components/Header.js","components/SimpleTabs.js","components/SideDrawer.js","components/ImgCard.js","components/Spinner.js","components/ListViewTab.js","components/loadMedia.js","components/loadModel.js","components/renderPredictions.js","components/PoseClassifierTab.js","components/detectPose.js","components/LearnTab.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","Header","props","classes","className","AppBar","position","Toolbar","children","Typography","variant","IconButton","color","backgroundColor","palette","background","paper","width","height","tabsContainer","display","flexDirection","justifyContent","tabLabel","boxShadow","tabsPanel","tabsContent","fab","bottom","spacing","right","fabGreen","common","white","green","TabPanel","value","index","other","component","role","hidden","id","aria-labelledby","Box","p","defaultProps","PropTypes","node","SimpleTabs","useTheme","React","useState","setValue","shouldDetect","setShouldDetect","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","icon","label","onClickHandler","Paper","square","Tabs","onChange","event","newValue","aria-label","indicatorColor","textColor","map","child","c","i","Tab","key","toTabLabel","arr","v","a","dir","direction","length","cloneElement","Zoom","in","timeout","style","transitionDelay","unmountOnExit","Fab","onClick","list","menuButton","marginRight","subList","padding","loginButton","paddingTop","primary","main","SideDrawer","left","state","setState","toggleDrawer","anchor","open","type","Fragment","edge","SwipeableDrawer","onClose","onOpen","clsx","onKeyDown","List","ListItem","button","ListItemText","ListItemIcon","Divider","maxWidth","img","objectPosition","ImgCard","image","description","alt","link","Card","CardActionArea","CardMedia","CardContent","gutterBottom","CardActions","Button","size","href","Spinner","CircularProgress","alignItems","scrollBehavior","scrollUp","renderRow","item","data","author_name","thumbnail_url","author_url","ListViewTab","listRef","useRef","isScrollForward","setScrollForward","items","isLoaded","videosLoaded","setVideoLoaded","fetchData","Promise","all","fetch","catch","console","error","responses","jsons","res","json","useEffect","Container","ref","onScroll","scrollDirection","itemCount","itemSize","itemData","Fade","current","scrollToItem","loadCamera","videoRef","constraints","audio","video","facingMode","undefined","aspectRatio","ideal","navigator","mediaDevices","getUserMedia","stream","srcObject","resolve","onloadedmetadata","loadVideo","onloadeddata","loadMedia","isCamera","media","loadModel","model","accuracy","load","architecture","outputStride","inputResolution","multiplier","quantBytes","net","toTuple","y","x","drawPoint","ctx","r","beginPath","arc","Math","PI","fillStyle","fill","drawSegment","scale","ay","ax","by","bx","moveTo","lineTo","lineWidth","strokeStyle","stroke","renderPredictions","predictions","canvas","getContext","clearRect","save","translate","drawImage","restore","forEach","score","keypoints","minConfidence","keypoint","drawKeypoints","adjacentKeyPoints","posenet","points","drawSkeleton","overflow","objectFit","PoseClassifierTab","camera","assetLoaded","setAssetLoaded","canvasRef","idRef","stopDetection","poseDetectionFrame","poses","estimatePoses","flipHorizontal","decodingMethod","pose","concat","tempId","requestAnimationFrame","then","assets","cancelAnimationFrame","log","autoPlay","playsInline","muted","bool","true","detectPose","drawPrediction","margin","predict","values","play","LearnTab","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f0500b86.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.children}\n          <Typography variant=\"h6\" className={classes.title}>\n            Title\n          </Typography>\n          <IconButton color=\"inherit\" />\n          <AccessAlarmIcon color=\"inherit\" />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n  },\n  tabsContainer: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  tabLabel: {\n    boxShadow: '0 0 3px black',\n  },\n  tabsPanel: {\n    height: '100%',\n    width: '100%',\n  },\n  tabsContent: {\n    height: '100%',\n    width: '100%',\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\nconst a11yProps = (index) => {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n};\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box className={classes.tabsContent} p={0}>\n          {children}\n        </Box>\n      )}\n    </Typography>\n  );\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nTabPanel.defaultProps = {\n  children: PropTypes.node,\n};\n\nconst SimpleTabs = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(2);\n  const [shouldDetect, setShouldDetect] = React.useState(true);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClickToUpload = () => {\n    // console.log('Upload file');\n  };\n\n  const handleClickToToggleDetection = () => {\n    setShouldDetect(!shouldDetect);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  const fabs = [\n    {\n      color: 'secondary',\n      className: classes.fab,\n      icon: <CloudUploadIcon />,\n      label: 'Upload',\n      onClickHandler: handleClickToUpload,\n    },\n    {\n      color: 'primary',\n      className: classes.fab,\n      icon: shouldDetect ? <PauseIcon /> : <PlayArrowIcon />,\n      label: 'Pause/Play',\n      onClickHandler: handleClickToToggleDetection,\n    },\n  ];\n\n  const toTabLabel = (c, i) => {\n    const label = `${i + 1}`;\n    return <Tab key={i} label={label} {...a11yProps(i)} />;\n  };\n\n  const toTabPanel = (c, i, v, a) => {\n    // Last item to be cloned to handle stopping of predictions\n    return (\n      <TabPanel className={classes.tabsPanel} key={i} index={i} value={v} dir={theme.direction}>\n        {i === a.length - 1 ? React.cloneElement(c, { shouldDetect }) : c}\n      </TabPanel>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper square className={classes.tabsContainer}>\n        <Tabs\n          className={classes.tabLabel}\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          {props.children.map((child, index) => toTabLabel(child, index))}\n        </Tabs>\n        {props.children.map((child, index, arr) => toTabPanel(child, index, value, arr))}\n      </Paper>\n      {fabs.map((fab, index) => (\n        <Zoom\n          key={fab.color}\n          in={value === index + 1}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index + 1 ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab\n            aria-label={fab.label}\n            className={fab.className}\n            color={fab.color}\n            onClick={fab.onClickHandler}\n          >\n            {fab.icon}\n          </Fab>\n        </Zoom>\n      ))}\n    </div>\n  );\n};\n\nSimpleTabs.propTypes = {\n  children: PropTypes.node,\n};\n\nSimpleTabs.defaultProps = {\n  children: PropTypes.node,\n};\n\nexport default SimpleTabs;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HistoryIcon from '@material-ui/icons/History';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 300,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  subList: {\n    padding: theme.spacing(0),\n  },\n  loginButton: {\n    paddingTop: theme.spacing(18),\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  },\n}));\n\nconst SideDrawer = () => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list)}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.subList}>\n        <ListItem className={classes.loginButton} button>\n          <ListItemText primary=\"Log in\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <HistoryIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"History\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <StarsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Starred\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default SideDrawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 350,\n  },\n  img: {\n    objectPosition: '50% 25%',\n  },\n});\n\nconst ImgCard = (props) => {\n  const classes = useStyles();\n  const { title, image, description, alt, link } = props;\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          classes={{\n            img: classes.img,\n          }}\n          component=\"img\"\n          alt={alt}\n          height=\"200\"\n          image={image}\n          title={title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" href={link}>\n          View\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Star\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nImgCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n};\n\nexport default ImgCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst Spinner = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" size={80} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","/* global fetch */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, ListItem, Fab, Fade } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { FixedSizeList } from 'react-window';\nimport ImgCard from './ImgCard';\nimport Spinner from './Spinner';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    padding: '0',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  list: {\n    backgroundColor: theme.palette.background.paper,\n    scrollBehavior: 'smooth',\n    display: 'flex',\n  },\n  scrollUp: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst renderRow = (props) => {\n  const { index, style, data } = props;\n  const item = data[index];\n  // const title = data[index].title;\n  return (\n    <ListItem style={style} key={index}>\n      <ImgCard\n        title={item.author_name}\n        image={item.thumbnail_url}\n        description={item.title}\n        alt={item.title}\n        link={item.author_url}\n      />\n    </ListItem>\n  );\n};\n\nrenderRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nconst ListViewTab = () => {\n  const classes = useStyles();\n  const listRef = React.useRef();\n  const [isScrollForward, setScrollForward] = React.useState(false);\n  const [videosLoaded, setVideoLoaded] = React.useState({\n    items: [],\n    isLoaded: false,\n  });\n\n  const handleClickToScrollTop = () => {\n    listRef.current.scrollToItem(0);\n  };\n\n  const handleScroll = (event) => {\n    if (event.scrollDirection === 'backward') {\n      setScrollForward(true);\n    } else {\n      setScrollForward(false);\n    }\n  };\n\n  const fetchData = async () => {\n    const responses = await Promise.all([\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@nytonystark/video/6816145905821994246'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@shinsama422/video/6808373753005739265'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@hotcheekylace/video/6824364109165907202'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@yodelinghaley/video/6794132523589979397'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@scout2015/video/6718335390845095173'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@scout2015/video/6718335390845095173'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@scout2015/video/6718335390845095173'\n      ),\n      fetch(\n        'https://www.tiktok.com/oembed?url=https://www.tiktok.com/@scout2015/video/6718335390845095173'\n      ),\n      // eslint-disable-next-line no-console\n    ]).catch(console.error);\n\n    const jsons = responses.map((res) => res.json());\n    const data = await Promise.all(jsons);\n    setVideoLoaded({\n      items: data,\n      isLoaded: true,\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Container className={classes.root}>\n      {videosLoaded.isLoaded ? (\n        <FixedSizeList\n          className={classes.list}\n          ref={listRef}\n          onScroll={handleScroll}\n          height={700}\n          itemCount={8}\n          itemSize={400}\n          width={350}\n          itemData={videosLoaded.items}\n        >\n          {renderRow}\n        </FixedSizeList>\n      ) : (\n        <Spinner />\n      )}\n\n      <Fade in={isScrollForward}>\n        <Fab\n          className={classes.scrollUp}\n          color=\"primary\"\n          aria-label=\"up\"\n          onClick={handleClickToScrollTop}\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </Fade>\n    </Container>\n  );\n};\n\nexport default ListViewTab;\n","/* eslint-disable no-param-reassign */\n/* global navigator */\nconst loadCamera = async (videoRef) => {\n  const isMobile = true;\n\n  const videoConstraints = {\n    facingMode: 'user',\n    width: isMobile ? undefined : videoRef.videoWidth,\n    height: isMobile ? undefined : videoRef.videoHeight,\n    aspectRatio: { ideal: 0.5625 },\n  };\n\n  const constraints = {\n    audio: false,\n    video: videoConstraints,\n  };\n\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  videoRef.current.srcObject = stream;\n\n  return new Promise((resolve) => {\n    videoRef.current.onloadedmetadata = () => {\n      resolve(videoRef.current);\n    };\n  });\n};\n\nconst loadVideo = async (videoRef) => {\n  return new Promise((resolve) => {\n    videoRef.current.onloadeddata = () => {\n      resolve(videoRef.current);\n    };\n  });\n};\n\nconst loadMedia = async (videoRef, isCamera) => {\n  let media;\n  if (isCamera) {\n    media = await loadCamera(videoRef);\n    return media;\n  }\n\n  media = await loadVideo(videoRef);\n  return media;\n};\n\nexport default loadMedia;\n","const loadModel = async (model, accuracy) => {\n  let net;\n\n  switch (accuracy) {\n    case 'low':\n      net = await model.load({\n        architecture: 'MobileNetV1',\n        outputStride: 16,\n        inputResolution: { width: 513, height: 200 },\n        multiplier: 0.5,\n        quantBytes: 2,\n      });\n      break;\n    case 'medium':\n      net = await model.load({\n        architecture: 'MobileNetV1',\n        outputStride: 16,\n        inputResolution: { width: 513, height: 200 },\n        multiplier: 0.75,\n        quantBytes: 2,\n      });\n      break;\n    case 'high':\n      net = await model.load({\n        architecture: 'MobileNetV1',\n        outputStride: 8,\n        inputResolution: { width: 513, height: 200 },\n        multiplier: 1,\n        quantBytes: 4,\n      });\n      break;\n    case 'ultra':\n      net = await model.load({\n        architecture: 'ResNet50',\n        outputStride: 16,\n        inputResolution: { width: 257, height: 200 },\n        quantBytes: 4,\n      });\n      break;\n    default:\n      net = await model.load({\n        architecture: 'MobileNetV1',\n        outputStride: 16,\n        inputResolution: { width: 513, height: 200 },\n        multiplier: 0.5,\n        quantBytes: 2,\n      });\n  }\n\n  return net;\n};\n\nexport default loadModel;\n","/* eslint-disable no-param-reassign */\nimport * as posenet from '@tensorflow-models/posenet';\n\nconst toTuple = ({ y, x }) => {\n  return [y, x];\n};\n\nconst drawPoint = (ctx, y, x, r, color) => {\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n};\n\n/**\n * Draws a line on a canvas, i.e. a joint\n */\nconst drawSegment = ([ay, ax], [by, bx], color, scale, ctx) => {\n  const lineWidth = 2;\n\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\n/**\n * Draws a pose skeleton by looking up all adjacent keypoints/joints\n */\nconst drawSkeleton = (keypoints, minConfidence, ctx, scale = 1) => {\n  const color = 'aqua';\n\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(keypoints, minConfidence);\n\n  adjacentKeyPoints.forEach((points) => {\n    drawSegment(toTuple(points[0].position), toTuple(points[1].position), color, scale, ctx);\n  });\n};\n\n/**\n * Draw pose keypoints onto a canvas\n */\nconst drawKeypoints = (keypoints, minConfidence, ctx, scale = 1) => {\n  const color = 'aqua';\n\n  for (let i = 0; i < keypoints.length; i += 1) {\n    const keypoint = keypoints[i];\n\n    if (keypoint.score >= minConfidence) {\n      const { y, x } = keypoint.position;\n      drawPoint(ctx, y * scale, x * scale, 3, color);\n    }\n  }\n};\n\n/**\n * Draw the bounding box of a pose. For example, for a whole person standing\n * in an image, the bounding box will begin at the nose and extend to one of\n * ankles\n */\nconst drawBoundingBox = (keypoints, ctx) => {\n  const boundingBoxColor = 'red';\n\n  const boundingBox = posenet.getBoundingBox(keypoints);\n\n  ctx.strokeRect(\n    boundingBox.minX,\n    boundingBox.minY,\n    boundingBox.maxX - boundingBox.minX,\n    boundingBox.maxY - boundingBox.minY\n  );\n\n  ctx.strokeStyle = boundingBoxColor;\n  ctx.stroke();\n};\n\nconst renderPredictions = (predictions, video, canvas) => {\n  canvas.width = video.width;\n  canvas.height = video.height;\n\n  const minPoseConfidence = 0.1;\n  const minPartConfidence = 0.15;\n\n  const ctx = canvas.getContext('2d');\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.save();\n  ctx.scale(-1, 1);\n  ctx.translate(-canvas.width, 0);\n  ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n  ctx.restore();\n\n  // For each pose (i.e. person) detected in an image, loop through the poses\n  // and draw the resulting skeleton and keypoints if over certain confidence\n  // scores\n  predictions.forEach(({ score, keypoints }) => {\n    if (score >= minPoseConfidence) {\n      drawKeypoints(keypoints, minPartConfidence, ctx);\n      drawSkeleton(keypoints, minPartConfidence, ctx);\n      // drawBoundingBox(keypoints, ctx);\n    }\n  });\n};\n\nexport default renderPredictions;\n","/* global requestAnimationFrame cancelAnimationFrame */\nimport React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as posenet from '@tensorflow-models/posenet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport loadMedia from './loadMedia';\nimport loadModel from './loadModel';\nimport renderPredictions from './renderPredictions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    height: '100%',\n    backgroundColor: theme.palette.background.paper,\n    padding: '0',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  video: {\n    objectFit: 'initial',\n    position: 'relative',\n    // width: '100%',\n    height: '100%',\n    display: 'block',\n  },\n  canvas: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    display: 'block',\n  },\n}));\n\nconst PoseClassifierTab = (props) => {\n  const { shouldDetect } = props;\n  const [assetLoaded, setAssetLoaded] = useState({\n    model: undefined,\n    camera: undefined,\n  });\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const idRef = useRef();\n  const stopDetection = useRef();\n  const classes = useStyles();\n\n  const poseDetectionFrame = async () => {\n    stopDetection.current = false;\n\n    let poses = [];\n    const pose = await assetLoaded.model.estimatePoses(videoRef.current, {\n      flipHorizontal: true,\n      decodingMethod: 'single-person',\n    });\n    poses = poses.concat(pose);\n\n    renderPredictions(poses, videoRef.current, canvasRef.current);\n    if (stopDetection.current === false) {\n      const tempId = requestAnimationFrame(poseDetectionFrame);\n      idRef.current = tempId;\n    }\n  };\n\n  const startPredictions = () => {\n    requestAnimationFrame(poseDetectionFrame);\n  };\n\n  const stopPredictions = () => {\n    if (idRef.current) {\n      cancelAnimationFrame(idRef.current);\n      stopDetection.current = true;\n    }\n  };\n\n  useEffect(() => {\n    if (!assetLoaded.model && !assetLoaded.camera && shouldDetect) {\n      Promise.all([loadModel(posenet, 'medium'), loadMedia(videoRef, true)]).then((assets) => {\n        setAssetLoaded({ model: assets[0], camera: assets[1] });\n      });\n    }\n\n    if (shouldDetect && assetLoaded.model && assetLoaded.camera) {\n      startPredictions();\n    } else if (!shouldDetect && assetLoaded.model && assetLoaded.camera) {\n      stopPredictions();\n    } else {\n      console.log('idle....');\n    }\n  }, [assetLoaded, shouldDetect]);\n\n  return (\n    <div className={classes.root}>\n      <video\n        className={classes.video}\n        autoPlay\n        playsInline\n        muted\n        ref={videoRef}\n        height=\"720\"\n        width=\"405\"\n      />\n      <canvas className={classes.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nPoseClassifierTab.propTypes = {\n  shouldDetect: PropTypes.bool,\n};\n\nPoseClassifierTab.defaultProps = {\n  shouldDetect: PropTypes.bool.true,\n};\n\nexport default PoseClassifierTab;\n","/* global requestAnimationFrame */\nimport renderPredictions from './renderPredictions';\n\nconst detectPose = (net, video, canvas, drawPrediction) => {\n  console.log('Predicting...');\n  const poseDetectionFrame = async () => {\n    let poses = [];\n    const pose = await net.estimatePoses(video, {\n      flipHorizontal: true,\n      decodingMethod: 'single-person',\n    });\n    poses = poses.concat(pose);\n\n    if (drawPrediction) {\n      renderPredictions(poses, video, canvas);\n      requestAnimationFrame(poseDetectionFrame);\n    }\n  };\n\n  poseDetectionFrame();\n};\n\nexport default detectPose;\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useRef, useEffect } from 'react';\nimport * as posenet from '@tensorflow-models/posenet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport loadModel from './loadModel';\nimport loadMedia from './loadMedia';\nimport detectPose from './detectPose';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    height: '100%',\n    backgroundColor: theme.palette.background.paper,\n    padding: 0,\n    margin: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  video: {\n    objectFit: 'initial',\n    position: 'relative',\n    height: '100%',\n    // width: '100%', // Remove for horizontal videos\n  },\n  canvas: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    display: 'block',\n  },\n}));\n\nconst predict = async (videoRef, canvasRef) => {\n  Promise.all([loadModel(posenet, 'low'), loadMedia(videoRef, false)]).then((values) => {\n    const [model, video] = values;\n    video.play();\n    detectPose(model, video, canvasRef.current, true);\n  });\n};\n\nconst LearnTab = () => {\n  const classes = useStyles();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    predict(videoRef, canvasRef);\n  }, [videoRef, canvasRef]);\n\n  return (\n    <div className={classes.root}>\n      <video\n        className={classes.video}\n        src=\"/videos/renegade.mp4\"\n        muted\n        ref={videoRef}\n        width=\"1080\"\n        height=\"720\"\n      />\n      <canvas className={classes.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default LearnTab;\n","import React from 'react';\nimport Header from './components/Header';\nimport SimpleTabs from './components/SimpleTabs';\nimport SideDrawer from './components/SideDrawer';\nimport ListViewTab from './components/ListViewTab';\nimport PoseClassifierTab from './components/PoseClassifierTab';\nimport LearnTab from './components/LearnTab';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header>\n        <SideDrawer />\n      </Header>\n      <SimpleTabs>\n        <ListViewTab />\n        <LearnTab />\n        <PoseClassifierTab />\n      </SimpleTabs>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}